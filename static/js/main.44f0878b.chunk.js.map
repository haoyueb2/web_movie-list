{"version":3,"sources":["components/detail.js","components/charts.js","components/App.js","index.js"],"names":["Header","Layout","Content","Footer","addjson","currentjson","Detail","Menu","SubMenu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","directors","casts","writers","rating","average","rating_people","_i","_addjson","length","tmp","tmpIn","console","log","JSON","parse","e","_this2","fetch","match","params","page","then","res","json","handleJson","setState","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","currentItem","value","_id","id","tepdirect","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","name","err","return","tepcasts","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","tepwriters","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","teprating","parseFloat","react_default","a","createElement","layout","className","menu","theme","mode","defaultSelectedKeys","style","lineHeight","Item","key","href","icon","type","padding","breadcrumb","margin","background","minHeight","Align","title","card","width","cover","alt","src","poster","rate","disabled","allowHalf","pubdata","duration","languages","summary","textAlign","Component","Charts","genresNumber","countryNumber","languageNumber","text","textstring","split","currentvalue","itemjson","push","genreAnalyze","countryAnalyze","languageAnalyze","analysis","genre","movieNumber","eachitem","isexist","genres","eachgen","_analysis","eachana","country","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","countries","each","_i2","_analysis2","language","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_i3","_analysis3","searchResult","_i4","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","indexOf","charts_Header","charts_Content","BizCharts","height","scale","tickInterval","forceFit","crosshairs","position","color","charts_Footer","Search","Input","Option","Select","howsearch","IconText","_ref","marginRight","Index","pageNum","pageId","fetchData","webBase","_this3","fetchGenresData","_this4","stringify","_this5","selectBefore","es_select","defaultValue","onChange","App_Header","App_SubMenu","onClick","searchGenre","App_Content","addonBefore","placeholder","enterButton","size","onSearch","searchTitle","searchAll","list","itemLayout","pagination","pageSize","total","dataSource","footer","renderItem","item","actions","tooltips","App_IconText","extra","Meta","concat","description","pubdate","App_Footer","RouterIndex","react_router_dom","react_router","exact","path","component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.44f0878b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Rate, Layout, Menu, Breadcrumb, Card, Icon} from 'antd';\r\nconst { Header, Content, Footer} = Layout;\r\nvar addjson = [];\r\nvar currentjson = {};\r\nconst SubMenu = Menu.SubMenu;\r\nclass Detail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: {},\r\n            directors: \"\",\r\n            casts: \"\",\r\n            writers: \"\",\r\n            rating: { average:1 , rating_people: \"\" },\r\n        }\r\n    }\r\n    handleJson() {\r\n        for(let tmp of addjson) {\r\n            console.log(tmp);\r\n            for(let tmpIn in tmp) {\r\n                try {\r\n                    tmp[tmpIn] = JSON.parse(tmp[tmpIn]);\r\n                } catch(e) {\r\n                    console.log(\"出错\"+tmpIn+e);\r\n                }\r\n                //tmp[tmpIn] = tmp[tmpIn].substring(0,tmp[tmpIn].length);\r\n                console.log(tmp[tmpIn]);\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n\r\n\r\n        fetch('/api/films/'+this.props.match.params.page)\r\n            .then(res => res.json())\r\n            .then(json =>  {\r\n                console.log(json)\r\n                addjson = json;\r\n                console.log(addjson);\r\n                this.handleJson();\r\n                this.setState({\r\n                    data: addjson,\r\n                });\r\n                for (let currentItem of addjson) {\r\n                    if (currentItem._id === this.props.match.params.id) {\r\n                        currentjson = currentItem;\r\n                        console.log(currentjson);\r\n                        let tepdirect = \"\";\r\n                        for (let i of currentjson.directors) {\r\n                            tepdirect += i.name;\r\n                        }\r\n                        let tepcasts = \"\";\r\n                        for (let i of currentjson.casts) {\r\n                            tepcasts = tepcasts + i.name + \"/\";\r\n                        }\r\n                        let tepwriters = \"\";\r\n                        for (let i of currentjson.writers) {\r\n                            tepwriters = tepwriters + i.name + \"/\";\r\n                        }\r\n                        let teprating = { average: 5, rating_people: \"\" };\r\n                        teprating.average = parseFloat(currentjson.rating.average);\r\n                        teprating.rating_people = currentjson.rating.rating_people;\r\n                        this.setState({\r\n                            data: currentjson,\r\n                            directors: tepdirect,\r\n                            casts: tepcasts,\r\n                            writers: tepwriters,\r\n                            rating: teprating,\r\n                        });\r\n                    }\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <Layout className=\"layout\">\r\n                <Header>\r\n                    <div className=\"logo\" />\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        defaultSelectedKeys={['1']}\r\n                        style={{ lineHeight: '64px' }}\r\n                    >\r\n                        <Menu.Item key=\"1\"><a href={`./`}  > <Icon type=\"bars\" />电影列表</a></Menu.Item>\r\n                        <Menu.Item key=\"2\"><a href={`./#/charts`}  > <Icon type=\"bar-chart\" />数据可视化</a></Menu.Item>\r\n\r\n                    </Menu>\r\n                </Header>\r\n                <Content style={{ padding: '0 50px' }}>\r\n                    <Breadcrumb style={{ margin: '16px 0' }}>\r\n                        <Breadcrumb.Item>details</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n\r\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280,Align: 'center' }}>\r\n                        <h1>{this.state.data.title}</h1>\r\n                        <Card\r\n                            style={{ width: 300 }}\r\n                            cover={<img alt=\"example\" src={this.state.data.poster} />}\r\n                        >\r\n                        </Card>\r\n                        <h2>导演：{this.state.directors}</h2>\r\n                        <h2>主演：{this.state.casts}</h2>\r\n                        <h3>评分：{this.state.rating.average}(评分人数{this.state.rating.rating_people}人)</h3>\r\n                        <Rate disabled value={this.state.rating.average/2} allowHalf />\r\n                        <h3>上映日期：{this.state.data.pubdata}</h3>\r\n                        <h3>时长：{this.state.data.duration}分钟</h3>\r\n                        <h4>原著：{this.state.writers}</h4>\r\n                        <h4>语言：{this.state.data.languages}</h4>\r\n\r\n                        <p>剧情梗概：{this.state.data.summary}</p>\r\n\r\n                    </div>\r\n                </Content>\r\n\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    同济大学软件学院Web课lab02 ©2018 Created by 白皓月\r\n                </Footer>\r\n            </Layout>\r\n\r\n\r\n        )\r\n    }\r\n}\r\nexport default Detail","\r\n\r\nimport React, { Component } from 'react';\r\nimport {G2, Chart, Geom, Axis, Tooltip, Coord, Label, Legend, View, Guide, Shape, Facet, Util} from \"bizcharts\";\r\nimport {Rate, Layout, Menu, Breadcrumb, Card, Icon} from 'antd';\r\nconst { Header, Content, Footer} = Layout;\r\n// 数据源\r\nvar addjson = [];\r\nconst SubMenu = Menu.SubMenu;\r\nclass Charts extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            genresNumber: [],\r\n            countryNumber:[],\r\n            languageNumber:[],\r\n        }\r\n    }\r\n    componentWillMount() {\r\n\r\n        fetch(\"./films.json\")\r\n            .then(res => res.text())\r\n            .then(text => {\r\n                let textstring = text.split('\\n');\r\n                for (let currentvalue of textstring) {\r\n                    let itemjson = JSON.parse(currentvalue);\r\n                    addjson.push(itemjson)\r\n                }\r\n                this.setState({\r\n                    data: addjson,\r\n                    genresNumber:this.genreAnalyze(addjson),\r\n                    countryNumber:this.countryAnalyze(addjson),\r\n                    languageNumber:this.languageAnalyze(addjson),\r\n                });\r\n                console.log(this.state.languageNumber)\r\n            });\r\n    }\r\n    genreAnalyze(addjson) {\r\n        let analysis=[{genre:\"剧情\",movieNumber:0}];\r\n        for(let eachitem of addjson) {\r\n            let isexist = false;\r\n            for(let eachgen of eachitem.genres) {\r\n                for (let eachana of analysis) {\r\n                    if (eachana.genre === eachgen) {\r\n                        eachana.movieNumber++;\r\n                        isexist = true;\r\n                    }\r\n                }\r\n                if(!isexist){\r\n                    analysis.push({genre:eachgen,movieNumber:1})\r\n                }\r\n            }\r\n        }\r\n        return analysis;\r\n    }\r\n    countryAnalyze(addjson){\r\n        let analysis=[{country:\"美国\",movieNumber:0}];\r\n        for(let eachitem of addjson) {\r\n            let isexist = false;\r\n            for(let each of eachitem.countries) {\r\n                for (let eachana of analysis) {\r\n                    if (eachana.country === each) {\r\n                        eachana.movieNumber++;\r\n                        isexist = true;\r\n                    }\r\n                }\r\n                if(!isexist){\r\n                    analysis.push({country:each,movieNumber:1})\r\n                }\r\n            }\r\n        }\r\n        return analysis;\r\n    }\r\n    languageAnalyze(addjson){\r\n        let analysis=[{language:\"英语\",movieNumber:0}];\r\n        for(let eachitem of addjson) {\r\n            let isexist = false;\r\n            for(let each of eachitem.languages) {\r\n                for (let eachana of analysis) {\r\n                    if (eachana.language === each) {\r\n                        eachana.movieNumber++;\r\n                        isexist = true;\r\n                    }\r\n                }\r\n                if(!isexist){\r\n                    analysis.push({language:each,movieNumber:1})\r\n                }\r\n            }\r\n        }\r\n        return analysis;\r\n    }\r\n\r\n    searchGenre(value) {\r\n        let searchResult=[];\r\n        for(let eachitem of addjson) {\r\n            for(let eachgen of eachitem.genres) {\r\n                if (eachgen.indexOf(value) !== -1) {\r\n                    searchResult.push(eachitem);\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            data:searchResult\r\n        })\r\n    }\r\n    render() {\r\n        const gerecols = {\r\n            movieNumber: {\r\n                tickInterval: 20\r\n            }\r\n        };\r\n        const countrycols = {\r\n            movieNumber: {\r\n                tickInterval: 10\r\n            }\r\n        };\r\n        const languagecols = {\r\n            movieNumber: {\r\n                tickInterval: 10\r\n            }\r\n        };\r\n        return (\r\n            <Layout className=\"layout\">\r\n                <Header>\r\n                    <div className=\"logo\" />\r\n                    <Menu\r\n                        theme=\"dark\"\r\n                        mode=\"horizontal\"\r\n                        defaultSelectedKeys={['2']}\r\n                        style={{ lineHeight: '64px' }}\r\n                    >\r\n                        <Menu.Item key=\"1\"><a href={`./`}  > <Icon type=\"bars\" />电影列表</a></Menu.Item>\r\n                        <Menu.Item key=\"2\"><a href={`./#/charts`}  > <Icon type=\"bar-chart\" />数据可视化</a></Menu.Item>\r\n\r\n                    </Menu>\r\n                </Header>\r\n                <Content style={{ padding: '0 50px' }}>\r\n                    <Breadcrumb style={{ margin: '16px 0' }}>\r\n                        <Breadcrumb.Item>charts</Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n\r\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\r\n                        <Chart height={400} data={this.state.genresNumber} scale={gerecols} forceFit>\r\n                            <Axis name=\"genre\" />\r\n                            <Axis name=\"movieNumber\" />\r\n\r\n                            <Tooltip\r\n                                crosshairs={{\r\n                                    type: \"y\"\r\n                                }}\r\n                            />\r\n                            <Geom type=\"interval\" position=\"genre*movieNumber\" color=\"genre\" />\r\n                        </Chart>\r\n                        <Chart height={400} data={this.state.countryNumber} scale={countrycols} forceFit>\r\n                            <Axis name=\"country\" />\r\n                            <Axis name=\"movieNumber\" />\r\n\r\n                            <Tooltip\r\n                                crosshairs={{\r\n                                    type: \"y\"\r\n                                }}\r\n                            />\r\n                            <Geom type=\"interval\" position=\"country*movieNumber\" color=\"country\" />\r\n                        </Chart>\r\n                        <Chart height={400} data={this.state.languageNumber} scale={languagecols} forceFit>\r\n                            <Axis name=\"language\" />\r\n                            <Axis name=\"movieNumber\" />\r\n\r\n                            <Tooltip\r\n                                crosshairs={{\r\n                                    type: \"y\"\r\n                                }}\r\n                            />\r\n                            <Geom type=\"interval\" position=\"language*movieNumber\" color=\"language\" />\r\n                        </Chart>\r\n                    </div>\r\n                </Content>\r\n\r\n                <Footer style={{ textAlign: 'center' }}>\r\n                    同济大学软件学院Web课lab02 ©2018 Created by 白皓月\r\n                </Footer>\r\n            </Layout>)\r\n    }\r\n}\r\nexport default Charts\r\n\r\n\r\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { List,Icon ,Input,Rate,Layout,Menu, Breadcrumb ,Select} from 'antd';\nimport './App.css';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport Detail from './detail'\nimport Charts from './charts'\nconst Search = Input.Search;\nvar addjson = [];\nconst { Header, Content, Footer} = Layout;\nconst Option = Select.Option;\nvar howsearch = \"title\";\nconst SubMenu = Menu.SubMenu;\nconst webBase = 'https://www.mooooon333.cn:5000';\nconst IconText = ({ type, text }) => (\n    <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n        {text}\n  </span>\n);\n\nclass Index extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            pageNum:10000,\n            pageId:1,\n            genres:\"all\",\n        }\n    }\n    componentWillMount() {\n        this.fetchData(1)\n    }\n\n    fetchData(page) {\n        fetch(webBase+'/api/films/'+page)\n            .then(res => res.json())\n            .then(json =>  {\n                console.log(json);\n                addjson = json;\n                console.log(addjson);\n                this.handleJson();\n                this.setState({\n                    data: addjson,\n                });\n            });\n    }\n    handleJson() {\n        for(let tmp of addjson) {\n            console.log(tmp);\n            for(let tmpIn in tmp) {\n                try {\n                    tmp[tmpIn] = JSON.parse(tmp[tmpIn]);\n                } catch(e) {\n                    console.log(\"出错\"+tmpIn+e);\n                }\n                //tmp[tmpIn] = tmp[tmpIn].substring(0,tmp[tmpIn].length);\n                console.log(tmp[tmpIn]);\n            }\n        }\n    }\n    searchTitle(value) {\n        let searchResult=[];\n        for(let eachitem of addjson) {\n            if(eachitem.title.indexOf(value) !== -1) {\n                searchResult.push(eachitem);\n            }\n        }\n        this.setState({\n            data:searchResult\n        })\n    }\n    searchGenre(value) {\n        fetch('/api/'+value)\n            .then(res => res.text())\n            .then(text=>  {\n                console.log(text);\n                this.setState({\n                    pageNum: text,\n                    genres:value,\n                });\n            });\n        this.fetchGenresData(value,1);\n    }\n    fetchGenresData(genres,page) {\n        fetch('/api/'+genres+'/'+page)\n            .then(res => res.json())\n            .then(json =>  {\n                console.log(json);\n                addjson = json;\n                console.log(addjson);\n                this.handleJson();\n                this.setState({\n                    data: addjson,\n                });\n            });\n    }\n    searchAll(value) {\n        let searchResult=[];\n        for(let eachitem of addjson) {\n                if (JSON.stringify(eachitem).indexOf(value) !== -1) {\n                    searchResult.push(eachitem);\n                }\n\n        }\n        this.setState({\n            data:searchResult,\n\n        })\n    }\n\n\n\n    render() {\n\n        const selectBefore = (\n            <Select defaultValue=\"按标题\" style={{ width: 90 }}  onChange={value => {howsearch = value;}}>\n                <Option value=\"title\">按标题</Option>\n                <Option value=\"genre\">按类别</Option>\n                <Option value=\"all\">全文搜索</Option>\n            </Select>\n        );\n        return (\n            <Layout className=\"layout\">\n                <Header>\n                    <div className=\"logo\" />\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={['1']}\n                        style={{ lineHeight: '64px' }}\n                    >\n                        <Menu.Item key=\"1\"><a href={`./`}  > <Icon type=\"bars\" />电影列表</a></Menu.Item>\n                        <Menu.Item key=\"2\"><a href={`./#/charts`}  > <Icon type=\"bar-chart\" />数据可视化</a></Menu.Item>\n                        <SubMenu\n                            key=\"sub1\"\n                            title={<span><Icon type=\"plus-square\" /><span>按类别浏览</span></span>}\n                            onClick={(key)=>{\n                                console.log(key.key);\n                                this.searchGenre(key.key);\n                            }}\n                        >\n                            <Menu.Item key=\"剧情\">剧情</Menu.Item>\n                            <Menu.Item key=\"喜剧\">喜剧</Menu.Item>\n                            <Menu.Item key=\"动作\">动作</Menu.Item>\n                            <Menu.Item key=\"科幻\">科幻</Menu.Item>\n                            <Menu.Item key=\"动画\">动画</Menu.Item>\n                            <Menu.Item key=\"惊悚\">惊悚</Menu.Item>\n                            <Menu.Item key=\"爱情\">爱情</Menu.Item>\n                            <Menu.Item key=\"犯罪\">犯罪</Menu.Item>\n                            <Menu.Item key=\"冒险\">冒险</Menu.Item>\n\n                        </SubMenu>\n                    </Menu>\n                </Header>\n                <Content style={{ padding: '0 50px' }}>\n                    <Breadcrumb style={{ margin: '16px 0' }}>\n                        <Breadcrumb.Item>Home</Breadcrumb.Item>\n                    </Breadcrumb>\n                    <div style={{ background: '#fff', padding: 24, minHeight: 280 }}>\n                        <h1>Movie list</h1>\n                        <Search\n                            addonBefore={selectBefore}\n                            placeholder=\"input search text\"\n                            enterButton=\"Search\"\n                            size=\"large\"\n                            onSearch={(value) => {\n                                if(howsearch ===\"title\") {\n                                    this.searchTitle(value);\n                                } else if(howsearch === \"genre\") {\n                                    this.searchGenre(value);\n                                } else if(howsearch === \"all\") {\n                                    this.searchAll(value);\n                                }\n                            }}\n                        />\n                        <List\n                            itemLayout=\"vertical\"\n                            size=\"large\"\n                            pagination={{\n                                onChange: (page) => {\n                                    if(this.state.genres === \"all\") {\n                                        this.fetchData(page);\n                                    } else {\n                                        this.fetchGenresData(this.state.genres,page);\n                                    }\n                                    this.setState({\n                                        pageId : page\n                                    });\n                                    console.log(page);\n                                },\n                                pageSize: 10,\n                                total : this.state.pageNum,\n                            }}\n                            dataSource={this.state.data}\n                            footer={< div > <b>movie</b> list</div >}\n                            renderItem={\n                                item => (\n                                    <List.Item\n                                        key={item.title}\n                                        actions={[<Rate disabled defaultValue={parseFloat(item.rating.average)/2}\n                                                        allowHalf tooltips={[item.rating.average,item.rating.average,item.rating.average,item.rating.average,item.rating.average]}/>,\n                                            <IconText type=\"edit\" text={item.rating.average+\"分\"}/>,\n                                            <IconText type=\"user\" text={item.rating.rating_people}/>]}\n                                        extra={<img width={100} alt=\"logo\" src= {item.poster} />}\n                                    >\n                                        <List.Item.Meta\n                                            //avatar={<Avatar shape = \"square\" size = {150} src={item.poster} width = {100} alt=\"logo\"/>}\n                                            title={<a href={`./#/${this.state.pageId}/${item._id}`}  >  {item.title}</a>}\n                                            description={item.pubdate+\"(\"+item.genres+\")\"}\n                                        />\n                                    </List.Item>)}\n                        />\n                    </div>\n                </Content>\n\n                <Footer style={{ textAlign: 'center' }}>\n                    同济大学软件学院Web课lab02 ©2018 Created by 白皓月\n                </Footer>\n            </Layout>\n            )\n    }\n\n\n}\n\n\nclass RouterIndex extends Component {\n    render(){\n        return(\n            <Router>\n                <Route exact path=\"/\" component={Index} />\n                <Route path = \"/:page/:id\" component={Detail} />\n                <Route path = \"/charts\" component={Charts} />\n            </Router>)\n    }\n}\nexport default RouterIndex;","import React from 'react'\nimport App from './components/App';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render((\n    <App />\n), document.getElementById('root'));\n"],"sourceRoot":""}